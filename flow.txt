graph TD
    A[Start] --> B{Initial Render};
    B --> C[createBoard] --> D[Set currentColorArrangement state];
    D --> E{useEffect with empty dependency array};
    E -- Runs once --> F[Add 'keydown' event listener to document];
    F --> G[handleKeyDown function];
    G -- Key 'A' or 'a' pressed --> H[Show alert: Nav Cheat code activated...];
    H --> I[setAbhiHackNav true];
    G -- Key 'D' or 'd' pressed --> J[Show alert: Nav Cheat code Disabled];
    J --> K[setAbhiHackNav false];
    G -- Other keys pressed --> G;
    F --> L{useEffect with dependency array checkFor...};
    L -- Runs on mount and when dependencies change --> M[setInterval every 100ms];
    M --> N[checkForColumnOfFour];
    N -- Match found --> O[Update scoreDisplay +4];
    O --> P[Set matching squares to blank in currentColorArrangement];
    N -- No match --> Q[checkForRowOfFour];
    Q -- Match found --> R[Update scoreDisplay +4];
    R --> S[Set matching squares to blank in currentColorArrangement];
    Q -- No match --> T[checkForColumnOfThree];
    T -- Match found --> U[Update scoreDisplay +3];
    U --> V[Set matching squares to blank in currentColorArrangement];
    T -- No match --> W[checkForRowOfThree];
    W -- Match found --> X[Update scoreDisplay +3];
    X --> Y[Set matching squares to blank in currentColorArrangement];
    W -- No match --> Z[moveIntoSquareBelow];
    Z --> AA[Move candies down fill top rows with random candies];
    AA --> AB[setCurrentColorArrangement ...currentColorArrangement];
    AB --> M;
    L --> AC[Return cleanup function clearInterval];
    E --> AD[Return cleanup function removeEventListener];
    B --> AE[Render JSX];
    AE --> AF[Map currentColorArrangement to img elements];
    AF --> AG[Attach drag event handlers dragStart dragDrop dragEnd];
    AG --> AH[Render ScoreBoard component];
    AH --> AI[User interacts drags and drops candy];
    AI --> AJ[dragStart setSquareBeingDragged];
    AJ --> AK[dragDrop setSquareBeingReplaced];
    AK --> AL[dragEnd];
    AL --> AM[Get IDs and source of dragged and replaced squares];
    AM --> AN[Swap candy colors in currentColorArrangement];
    AN --> AO[Check if move is valid adjacent or abhiHackNav];
    AO -- Valid Move --> AP[checkForColumnOfFour];
    AP -- Match --> AQ[Update score set blanks];
    AP -- No Match --> AR[checkForRowOfFour];
    AR -- Match --> AS[Update score set blanks];
    AR -- No Match --> AT[checkForColumnOfThree];
    AT -- Match --> AU[Update score set blanks];
    AT -- No Match --> AV[checkForRowOfThree];
    AV -- Match --> AW[Update score set blanks];
    AV -- No Match --> AX[setSquareBeingDragged null setSquareBeingReplaced null];
    AX --> AY[setCurrentColorArrangement ...currentColorArrangement];
    AO -- Invalid Move --> AZ[Revert candy colors in currentColorArrangement];
    AZ --> BA[setCurrentColorArrangement ...currentColorArrangement];
    AY --> AE;
    BA --> AE;
    AC --> BB[Component Unmounts];
    BB --> BC[Clear Interval];
    AD --> BD[Component Unmounts];
    BD --> BE[Remove Event Listener];
    BE --> BF[End];
    M --> BF[Interval continues until unmount]
    F --> BF[ Event listener active until unmount]